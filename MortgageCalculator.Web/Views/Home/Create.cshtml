@model MortgageCalculator.Data.Models.Mortgage

@{
    ViewBag.Title = "Create Mortgage";
}

<style>
    .form-container {
        width: 50%;
        margin: 0 auto;
        padding: 20px;
        background-color: #f9f9f9;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

        .form-container h2 {
            text-align: center;
            margin-bottom: 20px;
        }

    .form-group {
        margin-bottom: 15px;
    }

    label {
        font-weight: bold;
    }

    .form-control {
        width: 100%;
        padding: 8px;
        margin-top: 5px;
        border-radius: 4px;
        border: 1px solid #ccc;
        font-size: 14px;
    }

        .form-control:focus {
            border-color: #007bff;
            box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
        }

    .btn-container {
        text-align: center;
        margin-top: 20px;
    }

    .btn {
        padding: 10px 20px;
        font-size: 14px;
        cursor: pointer;
        border-radius: 4px;
        border: none;
        margin: 0 10px;
    }

    .btn-primary {
        background-color: #007bff;
        color: white;
    }

    .btn-danger {
        background-color: #dc3545;
        color: white;
    }

    .btn-primary:hover {
        background-color: #0056b3;
    }

    .btn-danger:hover {
        background-color: #c82333;
    }
</style>

@foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
{
    <div class="alert alert-danger">
        @error.ErrorMessage
    </div>
}

@using (Html.BeginForm("Create", "Home"))
{
    @Html.AntiForgeryToken()

    <div class="form-container">
        <h2>Create Mortgage</h2>

        <div class="form-group">
            @Html.LabelFor(m => m.Name)
            @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.MortgageType)
            @if (ViewBag.MortgageTypes != null)
            {
                @Html.DropDownListFor(m => m.MortgageType, (List<SelectListItem>)ViewBag.MortgageTypes, "Select Mortgage Type", new { @class = "form-control" })
            }
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.InterestRepayment)
            @if (ViewBag.InterestRepayments != null)
            {
                @Html.DropDownListFor(m => m.InterestRepayment, (List<SelectListItem>)ViewBag.InterestRepayments, "Select Interest Repayment", new { @class = "form-control" })
            }
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.EffectiveStartDate)
            @Html.TextBoxFor(m => m.EffectiveStartDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", value = DateTime.Now.ToString("yyyy-MM-dd") })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.EffectiveEndDate)
            @Html.TextBoxFor(m => m.EffectiveEndDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", value = DateTime.Now.AddMonths(6).ToString("yyyy-MM-dd") })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.TermsInMonths)
            @Html.TextBoxFor(m => m.TermsInMonths, new { @class = "form-control" })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.CancellationFee)
            @Html.TextBoxFor(m => m.CancellationFee, new { @class = "form-control" })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.EstablishmentFee)
            @Html.TextBoxFor(m => m.EstablishmentFee, new { @class = "form-control" })
        </div>

        <div class="btn-container">
            <button type="submit" class="btn btn-primary">Create Mortgage</button>
            <a href="@Url.Action("Index", "Home")" class="btn btn-danger">Cancel</a>
        </div>
    </div>
}
